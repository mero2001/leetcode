//ref:https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m=nums1.length;
        int n=nums2.length;
        
        if(m>n){
            int[] tmp=nums1;
            nums1=nums2;
            nums2=tmp;
        }
        
        m=nums1.length;
        n=nums2.length;
        
        int imin=0;
        int imax=m;
        int max_of_left=0;
        int min_of_right=0;
        int half_len=(m+n+1)/2;
        int i=0;
        int j=0;
        
        while(imin<=imax){
            i=(imin+imax)/2;
            j=half_len-i;
            if(i>0&&nums1[i-1]>nums2[j]){
                imax=i-1;
            }else if(i<m&&nums1[i]<nums2[j-1]){
                imin=i+1;
            }else{
               if(i==0){
                   max_of_left=nums2[j-1];
               }else if(j==0){
                   max_of_left=nums1[i-1];
               }else{
                   max_of_left=Math.max(nums1[i-1],nums2[j-1]);
               }
                
                if((m+n)%2==1){
                    return max_of_left;
                }
                
                if(i==m){
                    min_of_right=nums2[j];
                }else if(j==n){
                    min_of_right=nums1[i];
                }else{
                    min_of_right=Math.min(nums1[i],nums2[j]);
                }
                return (max_of_left+min_of_right)/2.0;
                
            }
        }
        return (max_of_left+min_of_right)/2.0;
        
    }
}
