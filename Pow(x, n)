class Solution {
    public double myPow(double x, int n) {
        if(n==0){
            return 1;
        }
        if(n<0){
            if(n==Integer.MIN_VALUE){//注意边界情况
                return (1/x)*myPow(x,(-1)*Integer.MAX_VALUE);
            }
            n=-n;
            x=1/x;
        }
        
        if(n%2==1){
            return x*myPow(x*x,n/2);
        }else{
            return myPow(x*x,n/2);
        }
        
        //n%2==1?return x*myPow(x*x,n/2):return myPow(x*x,n/2);
        
        
        /*if(n==0){
            return 1.0;
        }
        else if(n==1){
            if(sign==1){
                return x;
            }else{
                return 1/x;
            }
            //sign==1?return x:return 1/x; 报错是为何
        }else if(n>1 && n%2==0){
            if(sign==1){
                return myPow(x*x,n/2);
            }else{
                return 1/(myPow(x*x,n/2));
            }
            //sign==1?return myPow(x,n/2)*myPow(x,n/2):return 1/(myPow(x,n/2)*myPow(x,n/2));   
            //myPow(x,n/2)*myPow(x,n/2)这种方式计算量太大！！！！改成myPow(x*x,n/2)！！
        }else if(n>1&&n%2==1){
            if(sign==1){
                return x*myPow(x*x,n/2);
            }else{
                return 1/(x*myPow(x*x,n/2));
            }
            //sign==1?return x*myPow(x,n/2)*myPow(x,n/2):return 1/(x*myPow(x,n/2)*myPow(x,n/2));
        }*/
        
        //return 0;
    }
}
