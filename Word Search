class Solution {
    //ref:https://leetcode.com/problems/word-search/discuss/27658/Accepted-very-short-Java-solution.-No-additional-space.
    public boolean exist(char[][] board, String word) {
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(isExist(board,i,j,word,0)){
                    return true;
                }
            }
        }
        return false;
    }
    
    public boolean isExist(char[][] board, int i, int j, String word, int index){
        if(index==word.length()){//注意不是word.length()-1，而是word.length()
            return true;
        }
        if(i<0||j<0||i>board.length-1||j>board[0].length-1||word.charAt(index)!=board[i][j]){
            return false;
        }
        board[i][j]='*';//*******************************避免重复使用board[i][j]
        
        boolean result=isExist(board,i+1,j,word,index+1)||
                       isExist(board,i-1,j,word,index+1)||
                       isExist(board,i,j+1,word,index+1)||
                       isExist(board,i,j-1,word,index+1);
        board[i][j]=word.charAt(index);
        return result;
    }
}
