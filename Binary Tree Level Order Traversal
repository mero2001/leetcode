/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    //使用队列先进先出，后进后出的性质存储每一个节点。并在每层用一个固定数字的节点分隔开
    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue<TreeNode> queue=new LinkedList();
        List<List<Integer>> list=new ArrayList();
        List<Integer> slist=new ArrayList();
        
        if(root==null){
            return list;
        }
        
        
        queue.offer(root);
        queue.offer(new TreeNode(-789));
        while(queue.peek()!=null){
            if(queue.peek().val==-789){
                queue.poll();
            }
            if(queue.peek()==null){
                break;
            }
            slist=new ArrayList();
            while(queue.peek()!=null&&queue.peek().val!=-789){
                System.out.println(queue.peek().val);
                TreeNode tmp=queue.poll();
                slist.add(tmp.val);
                if(tmp.left!=null){
                    queue.offer(tmp.left);
                }
                if(tmp.right!=null){
                    queue.offer(tmp.right);
                }
            }
            list.add(slist);
            queue.poll();
            queue.offer(new TreeNode(-789));
        }
        
        return list;
    }
}
