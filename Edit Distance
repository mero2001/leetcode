class Solution {
    //ref:https://leetcode.com/problems/edit-distance/discuss/25849/Java-DP-solution-O(nm)
    //动态规划
    public int minDistance(String word1, String word2) {
        int m=word1.length()+1;
        int n=word2.length()+1;
        
        int[][] mat=new int[m][n];
        
        for(int i=0;i<m;i++){
            mat[i][0]=i;
        }
        for(int i=0;i<n;i++){
            mat[0][i]=i;
        }
        
        for(int i=0;i<m-1;i++){
            for(int j=0;j<n-1;j++){
                if(word1.charAt(i)==word2.charAt(j)){
                    mat[i+1][j+1]=mat[i][j];
                }else{
                    mat[i+1][j+1]=1+Math.min(mat[i][j],Math.min(mat[i][j+1],mat[i+1][j]));
                }
            }
        }
        
        return mat[m-1][n-1];
    }
}
