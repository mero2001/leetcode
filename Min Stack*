class MinStack {

    /** initialize your data structure here. */
    static class Element{//新建一个element类直接存储min
        final int min;
        final int val;
        Element(final int min, final int val){
            this.min=min;
            this.val=val;
        }
    }
    Stack<Element> minStack;//需要在minStatic函数之外公布
    public MinStack() {
        minStack=new Stack();
    }
    
    public void push(int x) {
        if(minStack.isEmpty()){
            minStack.push(new Element(x,x));
        }else{
            int premin=minStack.peek().min;
            if(premin<x){
                minStack.push(new Element(premin,x));
            }else{
                minStack.push(new Element(x,x));
            }
        }
        
    }
    
    public void pop() {
        minStack.pop();
    }
    
    public int top() {
        return minStack.peek().val;
    }
    
    public int getMin() {
        return minStack.peek().min;
    }
}

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
